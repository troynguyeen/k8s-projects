apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    metadata:
       labels:
          managedBy: karpenter
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default

      expireAfter: Never

      requirements:
        - key: "karpenter.k8s.aws/instance-generation" # Filter out older instance types
          operator: Gt
          values: ["2"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]
          minValues: 2
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["m6a","c6a", "r6a"]
        - key: node.kubernetes.io/instance-type
          operator: Exists
          minValues: 3
        - key: karpenter.sh/capacity-type # If not included, the webhook for the AWS cloud provider will default to on-demand
          operator: In
          values: ["on-demand", "spot"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]

  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 30s

  limits:
    cpu: "64"
    memory: "256Gi"
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiSelectorTerms:
    - alias: al2023@latest
  role: KarpenterNodeRole-demo-eks-cluster
  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: demo-eks-cluster
  - id: sg-07b1c00e59dbd89d5
  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: demo-eks-cluster
  - id: subnet-04b9c43f56cd478c9
  - id: subnet-0d9669ca52e5a7607
  - id: subnet-03dbb4d142d6aed35

